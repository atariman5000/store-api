// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;

namespace store.dal.Models
{
    /// <summary>
    /// This table contains detailed information about each UIC with start and end dates from DRRS/Asorts.  External Data Source.
    /// </summary>
    public partial class LtbUicdetail
    {
        public LtbUicdetail()
        {
            InverseUicdetailParent = new HashSet<LtbUicdetail>();
        }

        /// <summary>
        /// Unique generated number for the record used for row identity.
        /// </summary>
        public int UicdetailId { get; set; }
        /// <summary>
        /// A code value for the current record.
        /// </summary>
        public string UnitIdentificationCode { get; set; }
        /// <summary>
        /// The short name of the UIC record.
        /// </summary>
        public string ShortName { get; set; }
        /// <summary>
        /// Unit Identification Code (UIC) long name.
        /// </summary>
        public string LongName { get; set; }
        /// <summary>
        /// Unique ID representing the UIC.
        /// </summary>
        public int Uicid { get; set; }
        /// <summary>
        /// Unique ID representing the Major Army Command UIC.
        /// </summary>
        public int? MajorArmyCommandUicid { get; set; }
        /// <summary>
        /// UIC abbreviation.
        /// </summary>
        public string Uicabbreviation { get; set; }
        /// <summary>
        /// Unique ID representing the UIC army command type.
        /// </summary>
        public int? UicarmyCommandTypeId { get; set; }
        /// <summary>
        /// Unique ID representing the UIC activity status.
        /// </summary>
        public int? UicactivityStatusId { get; set; }
        /// <summary>
        /// Unique ID representing the UIC functional area.
        /// </summary>
        public int? UicfunctionalAreaId { get; set; }
        /// <summary>
        /// Unique ID representing the UIC command assignment.
        /// </summary>
        public int? UiccommandAssignmentId { get; set; }
        /// <summary>
        /// Unique ID representing UIC unit descriptor.
        /// </summary>
        public int? UicunitDescriptorId { get; set; }
        /// <summary>
        /// A code value for the current record.
        /// </summary>
        public string UicunitDescriptorCode { get; set; }
        /// <summary>
        /// Unique ID representing UIC unit type construction.
        /// </summary>
        public int? UicunitTypeConstructionId { get; set; }
        /// <summary>
        /// Unique ID representing the UIC Home geographic location.
        /// </summary>
        public int? HomeGeographicLocationId { get; set; }
        /// <summary>
        /// Unique ID representing the present geographic location of the UIC.
        /// </summary>
        public int? PresentGeographicLocationId { get; set; }
        /// <summary>
        /// A code value for the current record.
        /// </summary>
        public string UnitPresentLocationZipCode { get; set; }
        /// <summary>
        /// Unique ID representing if the UIC is mobilized.
        /// </summary>
        public int? MobilizedResponseId { get; set; }
        /// <summary>
        /// UIC TPSN5 value.
        /// </summary>
        public string Tpsn5 { get; set; }
        /// <summary>
        /// Unique ID representing UIC unit level.
        /// </summary>
        public int? UicunitLevelId { get; set; }
        /// <summary>
        /// Unique ID representing the DoD Unified Combatant Command.
        /// </summary>
        public int? DoDunifiedCombatantCommandId { get; set; }
        /// <summary>
        /// Unique ID representing Department of Defense (DoD) Service.
        /// </summary>
        public int? DoDserviceId { get; set; }
        /// <summary>
        /// Unique ID representing Department of Defense (DoD) Service Component.
        /// </summary>
        public int? DoDserviceComponentId { get; set; }
        /// <summary>
        /// Unique ID representing Army Branch.
        /// </summary>
        public int? ArmyBranchId { get; set; }
        /// <summary>
        /// Unique ID representing the Army organization type.
        /// </summary>
        public int? ArmyOrganizationTypeId { get; set; }
        /// <summary>
        /// Unique ID representing UIC organization entity status.
        /// </summary>
        public int? UicorganizationEntityStatusId { get; set; }
        /// <summary>
        /// The organization date for the UIC.
        /// </summary>
        public DateTime? OrganizationDate { get; set; }
        /// <summary>
        /// Unique ID representing the OSHA Establishment.
        /// </summary>
        public int? OshaEstablishmentId { get; set; }
        /// <summary>
        /// Unique ID representing installation station of the UIC.
        /// </summary>
        public int? InstallationStationId { get; set; }
        /// <summary>
        /// The DRRS/Asorts ID within the ASOHEIMS staging database.
        /// </summary>
        public int? DrrsAsortsId { get; set; }
        /// <summary>
        /// An indicator that the UIC record has been manually changed as opposed to update from data source.
        /// </summary>
        public bool ManuallyChanged { get; set; }
        /// <summary>
        /// Date the UIC record was manually updated.
        /// </summary>
        public DateTime? DateManuallyChanged { get; set; }
        /// <summary>
        /// Record Parent ID with Foreign key to the Primary key of the table.
        /// </summary>
        public int? UicdetailParentId { get; set; }
        /// <summary>
        /// The definition of the code value according to Regulatory Guidance or Business.
        /// </summary>
        public string ValueDefinition { get; set; }
        /// <summary>
        /// The Business Rule, Regulatory or Other Army/DoD Guidance that states the code use requirement.  If available, include the publish and effective dates.
        /// </summary>
        public string Guidance { get; set; }
        /// <summary>
        /// The date the code value was established for use.  This date may or may not be the same as the start collecting date.
        /// </summary>
        public DateTime? EstablishDate { get; set; }
        /// <summary>
        /// Date the code value was available to be assigned to a record.  Records assigned the code value must have a Date greater than or equal to the Start Collecting Date. Will default to the current date upon entry unless otherwise specified.  The time for start collecting date should always be 0000.
        /// </summary>
        public DateTime StartCollecting { get; set; }
        /// <summary>
        /// Date the code was taken out of circulation for collection.  Incidents assigned the code value must have a Date Occurred less than or equal to the End Collecting Date.  The time for end collecting date should always be 2359.
        /// </summary>
        public DateTime? EndCollecting { get; set; }
        /// <summary>
        /// A flag to indicate whether the code is active and assigned to action records. If no records have the code assigned and it is no longer active,  then the current value should be N. Valid values: Y/N
        /// </summary>
        public string Used { get; set; }
        /// <summary>
        /// Numeric sorting order to control the way the codes/types are listed in drop downs within the application or module.
        /// </summary>
        public int? DisplayOrder { get; set; }
        /// <summary>
        /// The user who created the record.
        /// </summary>
        public string CreatedByUser { get; set; }
        /// <summary>
        /// The date the record was created.
        /// </summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>
        /// Application used to create the record.
        /// </summary>
        public string CreatedByApp { get; set; }
        /// <summary>
        /// The user to last update the record.
        /// </summary>
        public string LastModifiedByUser { get; set; }
        /// <summary>
        /// The date the record was last updated.
        /// </summary>
        public DateTime LastModifiedDate { get; set; }
        /// <summary>
        /// Application used to last update the record.
        /// </summary>
        public string LastModifiedByApp { get; set; }

        public virtual LtbArmyBranch ArmyBranch { get; set; }
        public virtual LtbUicarmyOrganizationType ArmyOrganizationType { get; set; }
        public virtual LtbDoDservice DoDservice { get; set; }
        public virtual LtbDoDserviceComponent DoDserviceComponent { get; set; }
        public virtual LtbDoDunifiedCombatantCommand DoDunifiedCombatantCommand { get; set; }
        public virtual LtbGeographicLocation HomeGeographicLocation { get; set; }
        public virtual LtbStation InstallationStation { get; set; }
        public virtual LtbUic MajorArmyCommandUic { get; set; }
        public virtual LtbResponse MobilizedResponse { get; set; }
        public virtual LtbOshaEstablishment OshaEstablishment { get; set; }
        public virtual LtbGeographicLocation PresentGeographicLocation { get; set; }
        public virtual LtbUic Uic { get; set; }
        public virtual LtbUicactivityStatus UicactivityStatus { get; set; }
        public virtual LtbUicarmyCommandType UicarmyCommandType { get; set; }
        public virtual LtbUiccommandAssignment UiccommandAssignment { get; set; }
        public virtual LtbUicdetail UicdetailParent { get; set; }
        public virtual LtbUicfunctionalArea UicfunctionalArea { get; set; }
        public virtual LtbUicorganizationEntityStatus UicorganizationEntityStatus { get; set; }
        public virtual LtbUicunitDescriptor UicunitDescriptor { get; set; }
        public virtual LtbUicunitLevel UicunitLevel { get; set; }
        public virtual LtbUicunitTypeConstruction UicunitTypeConstruction { get; set; }
        public virtual ICollection<LtbUicdetail> InverseUicdetailParent { get; set; }
    }
}