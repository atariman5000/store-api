// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;

namespace store.dal.Models
{
    /// <summary>
    /// This table provides the set of phase of operation values that can be selected for a given mishap category group in a mishap.  It also indicates which phase of operations are relevant for specific flight data types and  aircraft designations  (manned, unmanned, aerostat).
    /// </summary>
    public partial class LtbMishapCategoryGroupPhaseOfOperationAssociation
    {
        /// <summary>
        /// Unique generated number for the record used for row identity.
        /// </summary>
        public int MishapCategoryGroupPhaseOfOperationAssociationId { get; set; }
        /// <summary>
        /// Unique ID representing Mishap Category Group.
        /// </summary>
        public int MishapCategoryGroupId { get; set; }
        /// <summary>
        /// Unique ID representing the phase of operation.
        /// </summary>
        public int PhaseOfOperationId { get; set; }
        /// <summary>
        /// Unique ID representing the flight data type.
        /// </summary>
        public int FlightDataTypeId { get; set; }
        /// <summary>
        /// Unique ID representing the US State.
        /// </summary>
        public int AircraftDesignationId { get; set; }
        /// <summary>
        /// The Business Rule, Regulatory or Other Army/DoD Guidance that states the code use requirement.  If available, include the publish and effective dates.
        /// </summary>
        public string Guidance { get; set; }
        /// <summary>
        /// The date the code value was established for use.  This date may or may not be the same as the start collecting date.
        /// </summary>
        public DateTime? EstablishDate { get; set; }
        /// <summary>
        /// Date the code value was available to be assigned to a record.  Records assigned the code value must have a Date greater than or equal to the Start Collecting Date. Will default to the current date upon entry unless otherwise specified.  The time for start collecting date should always be 0000.
        /// </summary>
        public DateTime StartCollecting { get; set; }
        /// <summary>
        /// Date the code was taken out of circulation for collection.  Incidents assigned the code value must have a Date Occurred less than or equal to the End Collecting Date.  The time for end collecting date should always be 2359.
        /// </summary>
        public DateTime? EndCollecting { get; set; }
        /// <summary>
        /// A flag to indicate whether the code is active and assigned to action records. If no records have the code assigned and it is no longer active,  then the current value should be N. Valid values: Y/N
        /// </summary>
        public string Used { get; set; }
        /// <summary>
        /// Numeric sorting order to control the way the codes/types are listed in drop downs within the application or module.
        /// </summary>
        public int? DisplayOrder { get; set; }
        /// <summary>
        /// The user who created the record.
        /// </summary>
        public string CreatedByUser { get; set; }
        /// <summary>
        /// The date the record was created.
        /// </summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>
        /// Application used to create the record.
        /// </summary>
        public string CreatedByApp { get; set; }
        /// <summary>
        /// The user to last update the record.
        /// </summary>
        public string LastModifiedByUser { get; set; }
        /// <summary>
        /// The date the record was last updated.
        /// </summary>
        public DateTime LastModifiedDate { get; set; }
        /// <summary>
        /// Application used to last update the record.
        /// </summary>
        public string LastModifiedByApp { get; set; }

        public virtual LtbAircraftDesignation AircraftDesignation { get; set; }
        public virtual LtbFlightDataType FlightDataType { get; set; }
        public virtual LtbMishapCategory MishapCategoryGroup { get; set; }
        public virtual LtbPhaseofOperation PhaseOfOperation { get; set; }
    }
}