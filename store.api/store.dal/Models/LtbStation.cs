// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;

namespace store.dal.Models
{
    /// <summary>
    /// This table provides a listing of installation/station codes.  External Data Source.
    /// </summary>
    public partial class LtbStation
    {
        public LtbStation()
        {
            InverseStationParent = new HashSet<LtbStation>();
            LtbAircrafts = new HashSet<LtbAircraft>();
            LtbUicdetails = new HashSet<LtbUicdetail>();
        }

        /// <summary>
        /// Unique generated number for the record used for row identity.
        /// </summary>
        public int StationId { get; set; }
        /// <summary>
        /// A code value for the current record.
        /// </summary>
        public string StationCode { get; set; }
        /// <summary>
        /// A code value for the current record.
        /// </summary>
        public string GeographicLocationCode { get; set; }
        /// <summary>
        /// A brief representation or account of the current value represented by the associated record.
        /// </summary>
        public string ShortDescription { get; set; }
        /// <summary>
        /// A detailed representation of the current value represented by the associated record.
        /// </summary>
        public string Description { get; set; }
        /// <summary>
        /// Identity value of the DoD Service for the Station.
        /// </summary>
        public int? DoDserviceId { get; set; }
        /// <summary>
        /// Identity value of the DoD Service Component for the Station.
        /// </summary>
        public int? DoDserviceComponentId { get; set; }
        /// <summary>
        /// Address of the Station.
        /// </summary>
        public string Address { get; set; }
        /// <summary>
        /// City where the station is located.
        /// </summary>
        public string City { get; set; }
        /// <summary>
        /// Unique ID representing US State location.
        /// </summary>
        public int? UsstateId { get; set; }
        /// <summary>
        /// Postal code for the station.
        /// </summary>
        public string ZipCode { get; set; }
        /// <summary>
        /// Country of Installation Station. Unique ID representing Country.
        /// </summary>
        public int? CountryId { get; set; }
        /// <summary>
        /// Unique ID representing installation location type.
        /// </summary>
        public int? InstallationLocationTypeId { get; set; }
        /// <summary>
        /// Station abbreviated name of the installation/station.
        /// </summary>
        public string StationAbbreviatedName { get; set; }
        /// <summary>
        /// Installation/Station geographic location name.
        /// </summary>
        public string GeographicLocationName { get; set; }
        /// <summary>
        /// Installation/Station grid coordinates.
        /// </summary>
        public string Gridcoordinates { get; set; }
        /// <summary>
        /// Installation/Station geographic point location.
        /// </summary>
        public string GeographicPointLocation { get; set; }
        /// <summary>
        /// Latitude/Longitude description for Installation Station.
        /// </summary>
        public string LatitudeLongitudeDescription { get; set; }
        /// <summary>
        /// Latitude direction of Installation Station.
        /// </summary>
        public string LatitudeDirection { get; set; }
        /// <summary>
        /// Latitude degrees of Installation Station.
        /// </summary>
        public int? LatitudeDegrees { get; set; }
        /// <summary>
        /// Latitude minutes of Installation Station.
        /// </summary>
        public int? LatitudeMinutes { get; set; }
        /// <summary>
        /// Latitude seconds of Installation Station.
        /// </summary>
        public int? LatitudeSeconds { get; set; }
        /// <summary>
        /// Longitude direction of Installation Station.
        /// </summary>
        public string LongitudeDirection { get; set; }
        /// <summary>
        /// Longitude degrees of Installation Station.
        /// </summary>
        public int? LongitudeDegrees { get; set; }
        /// <summary>
        /// Longitude minutes of Installation Station.
        /// </summary>
        public int? LongitudeMinutes { get; set; }
        /// <summary>
        /// Longitude seconds of Installation Station.
        /// </summary>
        public int? LongitudeSeconds { get; set; }
        /// <summary>
        /// Latitude of Installation Station.
        /// </summary>
        public int? Latitude { get; set; }
        /// <summary>
        /// Longitude of Installation Station.
        /// </summary>
        public int? Longitude { get; set; }
        /// <summary>
        /// X coordinate of the Station.
        /// </summary>
        public string Xcoordinate { get; set; }
        /// <summary>
        /// Y coordinate of the station.
        /// </summary>
        public string Ycoordinate { get; set; }
        /// <summary>
        /// Record Parent ID with Foreign key to the Primary key of the table.
        /// </summary>
        public int? StationParentId { get; set; }
        /// <summary>
        /// The definition of the code value according to Regulatory Guidance or Business.
        /// </summary>
        public string ValueDefinition { get; set; }
        /// <summary>
        /// The Business Rule, Regulatory or Other Army/DoD Guidance that states the code use requirement.  If available, include the publish and effective dates.
        /// </summary>
        public string Guidance { get; set; }
        /// <summary>
        /// The date the code value was established for use.  This date may or may not be the same as the start collecting date.
        /// </summary>
        public DateTime? EstablishDate { get; set; }
        /// <summary>
        /// Date the code value was available to be assigned to a record.  Records assigned the code value must have a Date greater than or equal to the Start Collecting Date. Will default to the current date upon entry unless otherwise specified.  The time for start collecting date should always be 0000.
        /// </summary>
        public DateTime StartCollecting { get; set; }
        /// <summary>
        /// Date the code was taken out of circulation for collection.  Incidents assigned the code value must have a Date Occurred less than or equal to the End Collecting Date.  The time for end collecting date should always be 2359.
        /// </summary>
        public DateTime? EndCollecting { get; set; }
        /// <summary>
        /// A flag to indicate whether the code is active and assigned to action records. If no records have the code assigned and it is no longer active,  then the current value should be N. Valid values: Y/N
        /// </summary>
        public string Used { get; set; }
        /// <summary>
        /// Numeric sorting order to control the way the codes/types are listed in drop downs within the application or module.
        /// </summary>
        public int? DisplayOrder { get; set; }
        /// <summary>
        /// The user who created the record.
        /// </summary>
        public string CreatedByUser { get; set; }
        /// <summary>
        /// The date the record was created.
        /// </summary>
        public DateTime CreatedDate { get; set; }
        /// <summary>
        /// Application used to create the record.
        /// </summary>
        public string CreatedByApp { get; set; }
        /// <summary>
        /// The user to last update the record.
        /// </summary>
        public string LastModifiedByUser { get; set; }
        /// <summary>
        /// The date the record was last updated.
        /// </summary>
        public DateTime LastModifiedDate { get; set; }
        /// <summary>
        /// Application used to last update the record.
        /// </summary>
        public string LastModifiedByApp { get; set; }

        public virtual LtbCountry Country { get; set; }
        public virtual LtbDoDservice DoDservice { get; set; }
        public virtual LtbDoDserviceComponent DoDserviceComponent { get; set; }
        public virtual LtbInstallationLocationType InstallationLocationType { get; set; }
        public virtual LtbStation StationParent { get; set; }
        public virtual LtbUsstate Usstate { get; set; }
        public virtual ICollection<LtbStation> InverseStationParent { get; set; }
        public virtual ICollection<LtbAircraft> LtbAircrafts { get; set; }
        public virtual ICollection<LtbUicdetail> LtbUicdetails { get; set; }
    }
}